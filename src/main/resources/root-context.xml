<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	
	 <!-- DB Password 암호화(Jasypt) -->
	 	<bean id="encryptorConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">  
        <property name="algorithm" value="PBEWITHMD5ANDDES" />
		<property name="passwordEnvName" value="DB_ENCRYPTION"/>
		</bean>  
		       
		<bean id="encryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">  
		        <property name="config" ref="encryptorConfig" />  
		</bean>  
		      
   		<bean id="propertyConfig" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="encryptor"/>
        <property name="location" value="classpath:props/jdbc.properties"/>
		</bean>


	 <context:property-placeholder location="classpath:/props/jdbc.properties"/>
	 
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	 	<property name="driverClassName" value="${jdbc.driver}"/>
	 	<property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="false"/>
    </bean>
    
    <bean id="transactionManager"
	 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg ref="sqlSession"/>
	 </bean>
	 

	 
	  <tx:advice id="txAdvice" transaction-manager="transactionManager">
	  		<tx:attributes>
	  			<tx:method name="select*" read-only="true" rollback-for="Exception"/> <!-- select로 시작하는 메소드 -->
	  			<tx:method name="insert*" rollback-for="Exception"/>
	  			<tx:method name="update*" rollback-for="Exception"/>
	  			<tx:method name="delete*" rollback-for="Exception"/> <!-- Exception이 발생했을때 rollback 해라! 라는 의미 -->
	  		</tx:attributes>
	  </tx:advice>
	  
	  
	  
	  
	  <tx:annotation-driven/>
</beans>
