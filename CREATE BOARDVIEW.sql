// BOARDVIEW 생성 테이블

CREATE OR REPLACE VIEW BOARDVIEW AS
(SELECT ARTICLE_NO, 
		B.MEMBER_NO, 
		IFNULL(M.MEMBER_NICK, M.MEMBER_ID) AS MEMBER_NICK,
		IFNULL(M.ABOUT_ME, "자기소개가 없습니다.") AS ABOUT_ME,
		ARTICLE_TYPE, 
		TAG, 
		ARTICLE_VIEW, 
		ARTICLE_LIKE, 
		B.WRITE_DATE, 
		MAX(R.WRITE_DATE) AS REPLY_DATE, 
		IFNULL(MAX(R.WRITE_DATE), B.WRITE_DATE) AS CHANGE_DATE, 
		HEADER, 
		B.CONTENT, 
		ARTICLE_STATUS,
		IFNULL(ARTICLE_STAR, 0) AS ARTICLE_STAR,
		CONTENT_TYPE,
		COUNT(REPLY_NO) AS TOTAL_REPLY
FROM BOARD B
JOIN MEMBER M USING (MEMBER_NO)
LEFT OUTER JOIN (SELECT COUNT(*) AS ARTICLE_STAR, ARTICLE_NO FROM STAR GROUP BY ARTICLE_NO) S USING (ARTICLE_NO)
LEFT OUTER JOIN REPLY R USING (ARTICLE_NO)
WHERE ARTICLE_STATUS = 'Y'
GROUP BY ARTICLE_NO
ORDER BY CHANGE_DATE DESC, ARTICLE_NO DESC);



//회원별 댓글 좋아요 갯수(ARTICLE_TYPE으로 분류)

CREATE OR REPLACE VIEW MEMBER_REPLY_LIKE
AS (
SELECT R.MEMBER_NO, ARTICLE_TYPE, REPLY_LIKE,
	CASE WHEN ARTICLE_TYPE = 1 THEN REPLY_LIKE * 20
		 WHEN ARTICLE_TYPE = 2 THEN REPLY_LIKE * 10
	ELSE 0 END AS REPLY_POINT
FROM REPLY R
LEFT OUTER JOIN BOARD B USING(ARTICLE_NO)
WHERE REPLY_STATUS = 'Y'
GROUP BY MEMBER_NO, ARTICLE_TYPE);

// 회원 게시물별 즐겨찾기 갯수(ARTICLE_TYPE으로 분류)

CREATE OR REPLACE VIEW MEMBER_ARTICLE_STAR
AS (
SELECT B.MEMBER_NO, ARTICLE_TYPE, COUNT(*) AS ARTICLE_STAR, 
	CASE WHEN ARTICLE_TYPE = 1 THEN COUNT(*) * 5
		 WHEN ARTICLE_TYPE = 2 THEN COUNT(*) * 10
		 ELSE 0 END AS STAR_POINT
FROM STAR S 
JOIN BOARD B USING (ARTICLE_NO)
LEFT JOIN MEMBER M ON (B.MEMBER_NO = M.MEMBER_NO)
WHERE B.ARTICLE_STATUS = 'Y'
GROUP BY MEMBER_NO);

// 회원 게시물별 좋아요 갯수

CREATE OR REPLACE VIEW MEMBER_ARTICLE_LIKE
AS (
SELECT MEMBER_NO, ARTICLE_TYPE, COUNT(*) AS ARTICLE_WRITE, SUM(ARTICLE_LIKE) AS ARTICLE_LIKE,
	CASE WHEN ARTICLE_TYPE = 1 THEN SUM(ARTICLE_LIKE) * 10
		 WHEN ARTICLE_TYPE = 2 THEN SUM(ARTICLE_LIKE) * 10 + COUNT(*) * 5
		 ELSE 0 END AS ARTICLE_POINT
FROM BOARD
WHERE ARTICLE_STATUS = 'Y'
GROUP BY MEMBER_NO, ARTICLE_TYPE);


// 회원별 포인트 점수 계산 뷰

CREATE OR REPLACE VIEW MEMBER_POINTVIEW
AS (SELECT M.MEMBER_NO, 
	SUM(IFNULL(ARTICLE_POINT, 0)) AS ARTICLE_POINT,
	SUM(IFNULL(REPLY_POINT, 0)) AS REPLY_POINT,
	SUM(IFNULL(STAR_POINT, 0)) AS STAR_POINT,
	SUM(IFNULL(ARTICLE_POINT,0) + IFNULL(REPLY_POINT,0) + IFNULL(STAR_POINT,0)) AS MEMBER_POINT
FROM MEMBER M
LEFT OUTER JOIN MEMBER_ARTICLE_LIKE A USING (MEMBER_NO)
LEFT OUTER JOIN MEMBER_REPLY_LIKE R ON (R.MEMBER_NO = A.MEMBER_NO AND R.ARTICLE_TYPE = A.ARTICLE_TYPE)
LEFT OUTER JOIN MEMBER_ARTICLE_STAR S ON (A.MEMBER_NO = S.MEMBER_NO AND A.ARTICLE_TYPE = S.ARTICLE_TYPE)
GROUP BY MEMBER_NO);

// MEMBERVIEW(기존 테이블에 신규정보 추가(포인트, 최근댓글 등))

CREATE OR REPLACE VIEW MEMBERVIEW
AS (
SELECT MEMBER_NO, MEMBER_ID, MEMBER_PWD, IFNULL(M.MEMBER_NICK, MEMBER_ID) AS MEMBER_NICK, LEVEL_NAME, ABOUT_ME, MEMBER_STATUS, TAG_ID,
		JOIN_DATE, LOGIN_DATE, MEMBER_POINT, REPLY_DATE
FROM MEMBER M
LEFT OUTER JOIN (
SELECT MEMBER_NO, REPLY_DATE
FROM BOARDVIEW
GROUP BY MEMBER_NO
ORDER BY CHANGE_DATE DESC) B USING(MEMBER_NO)
JOIN MEMBER_LEVEL USING (MEMBER_LEVEL)
JOIN MEMBER_POINTVIEW USING (MEMBER_NO)
WHERE MEMBER_STATUS = 'Y');

// 댓글 관련 뷰(사용자 정보)

CREATE OR REPLACE VIEW REPLYVIEW
AS (
SELECT REPLY_NO, MEMBER_NO, MEMBER_NICK, MEMBER_POINT, 
		IFNULL(ABOUT_ME, "자기소개가 없습니다") AS ABOUT_ME, 
		ARTICLE_NO, REPLY_LIKE, CONTENT, WRITE_DATE, MODIFY_DATE, REPLY_STATUS, REF_REPLY_NO 
FROM REPLY
LEFT JOIN MEMBERVIEW USING (MEMBER_NO)
ORDER BY WRITE_DATE DESC);